# user nginx;
# worker_processes auto;
# error_log /var/log/nginx/error.log warn;
# pid /run/nginx.pid;

# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;
#     sendfile on;

#     server {
#         listen 80;
#         server_name login.42.fr;
#         return 301 https://$host$request_uri;
#     }

#     server {
#         listen 443 ssl http2;
#         server_name login.42.fr;

# # I need generate my own certification since I don't own the domain
# # openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./srcs/nginx/certs/key.pem -out ./srcs/nginx/certs/cert.pem
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_certificate /etc/nginx/certs/cert.pem;
#         ssl_certificate_key /etc/nginx/certs/key.pem;

#         root /usr/share/nginx/html;
#         index index.php;

#         location / {
#             try_files $uri $uri/ /index.php?$args;
#         }

#         location ~ \.php$ {
#             include fastcgi_params;
#             fastcgi_pass localhost:9000;
#             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#             fastcgi_param HTTPS on;
#         }
#     }
# }

server {
    listen 80;
    index index.php index.html;
    server_name _;
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/html;
    location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

